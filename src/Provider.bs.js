// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as State from "./State.bs.js";
import * as React from "react";
import * as Service from "./Service.bs.js";
import * as Firebase from "./bindings/Firebase.bs.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";

function Provider$Auth(Props) {
  var children = Props.children;
  var match = State.useAuthState(undefined);
  var dispatch = match[1];
  var match$1 = React.useState(function () {
        return false;
      });
  var setInitialized = match$1[1];
  React.useEffect((function () {
          var unsubscribre = Firebase.Auth.onAuthStateChanged(Service.auth, (function (user) {
                  if (user !== undefined) {
                    Curry._1(dispatch, /* LoggedIn */{
                          _0: State.Auth.mapUser(Caml_option.valFromOption(user))
                        });
                  } else {
                    Curry._1(dispatch, /* LoggedOut */0);
                  }
                  return Curry._1(setInitialized, (function (param) {
                                return true;
                              }));
                }));
          return (function (param) {
                    return Curry._1(unsubscribre, undefined);
                  });
        }), [
        dispatch,
        setInitialized
      ]);
  if (match$1[0]) {
    return children;
  } else {
    return null;
  }
}

var Auth = {
  make: Provider$Auth
};

function Provider(Props) {
  var children = Props.children;
  return React.createElement(State.Provider.make, {
              children: React.createElement(Provider$Auth, {
                    children: children
                  })
            });
}

var make = Provider;

export {
  Auth ,
  make ,
  
}
/* State Not a pure module */
