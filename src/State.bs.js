// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";

var initialState = {
  user: undefined
};

function reducer(param, action) {
  if (action) {
    return {
            user: action._0
          };
  } else {
    return {
            user: undefined
          };
  }
}

function mapUser(user) {
  return {
          id: user.uid
        };
}

var Auth = {
  initialState: initialState,
  reducer: reducer,
  mapUser: mapUser
};

function reducer$1(state, action) {
  return {
          auth: reducer(state.auth, action._0)
        };
}

var initialState$1 = {
  auth: initialState
};

var context = React.createContext([
      initialState$1,
      (function (param) {
          
        })
    ]);

function useGlobalState(param) {
  return React.useContext(context);
}

function useAuthState(param) {
  var match = React.useContext(context);
  var dispatch = match[1];
  var authDispatch = React.useCallback((function (action) {
          return Curry._1(dispatch, /* Auth */{
                      _0: action
                    });
        }), [dispatch]);
  return [
          match[0].auth,
          authDispatch
        ];
}

var provider = context.Provider;

function State$Provider(Props) {
  var children = Props.children;
  var match = React.useReducer(reducer$1, initialState$1);
  return React.createElement(provider, {
              value: [
                match[0],
                match[1]
              ],
              children: children
            });
}

var Provider = {
  provider: provider,
  make: State$Provider
};

export {
  Auth ,
  reducer$1 as reducer,
  initialState$1 as initialState,
  context ,
  useGlobalState ,
  useAuthState ,
  Provider ,
  
}
/* context Not a pure module */
