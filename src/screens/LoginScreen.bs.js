// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Expo from "../bindings/Expo.bs.js";
import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Config from "../Config.bs.js";
import * as Service from "../Service.bs.js";
import * as Firebase from "../bindings/Firebase.bs.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as ReactNative from "react-native";
import * as Auth from "firebase/auth";

function LoginScreen(Props) {
  var match = Curry._1(Expo.AuthSession.Providers.Google.useIdTokenAuthRequest, {
        clientId: Config.googleWebClientId
      });
  var promptAsync = match[2];
  var response = match[1];
  React.useEffect((function () {
          if (response !== undefined && response.type === "success") {
            var id_token = response.params.id_token;
            var creds = Curry._1(Firebase.Auth.GoogleProvider.credential, id_token);
            Auth.signInWithCredential(Service.auth, creds);
          }
          
        }), [response]);
  return React.createElement(ReactNative.View, {
              style: {
                backgroundColor: "#fff",
                alignItems: "center",
                flex: 1.0,
                justifyContent: "center"
              },
              children: React.createElement(ReactNative.Button, {
                    disabled: Belt_Option.isNone(match[0]),
                    onPress: (function (param) {
                        return Curry._1(promptAsync, undefined);
                      }),
                    title: "Login"
                  })
            });
}

var make = LoginScreen;

export {
  make ,
  
}
/* Expo Not a pure module */
