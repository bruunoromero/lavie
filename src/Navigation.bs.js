// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as State from "./State.bs.js";
import * as React from "react";
import * as Header from "./components/Header.bs.js";
import * as HomeScreen from "./screens/HomeScreen.bs.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as LoginScreen from "./screens/LoginScreen.bs.js";
import * as Stack$ReactNavigation from "rescript-react-navigation/src/Stack.bs.js";
import * as Native from "@react-navigation/native";
import * as NativeStack$ReactNavigation from "rescript-react-navigation/src/NativeStack.bs.js";

var include = NativeStack$ReactNavigation.Make({});

var $$Screen = include.$$Screen;

var $$Navigator = include.$$Navigator;

function Navigation$NotAuthed(Props) {
  return React.createElement($$Navigator.make, {
              screenOptions: (function (param) {
                  return {
                          headerShown: false
                        };
                }),
              children: React.createElement($$Screen.make, {
                    name: "Login",
                    component: LoginScreen.make
                  })
            });
}

var NotAuthed_Navigation = include.Navigation;

var NotAuthed_stack = include.stack;

var NotAuthed_ScreenWithCallback = include.ScreenWithCallback;

var NotAuthed_Group = include.Group;

var NotAuthed = {
  Navigation: NotAuthed_Navigation,
  stack: NotAuthed_stack,
  ScreenWithCallback: NotAuthed_ScreenWithCallback,
  $$Screen: $$Screen,
  $$Navigator: $$Navigator,
  Group: NotAuthed_Group,
  make: Navigation$NotAuthed
};

var include$1 = Stack$ReactNavigation.Make({});

var Header$1 = include$1.Header;

var $$Screen$1 = include$1.$$Screen;

var $$Navigator$1 = include$1.$$Navigator;

function Navigation$Authed(Props) {
  return React.createElement($$Navigator$1.make, {
              screenOptions: (function (param) {
                  return {
                          header: Curry._1(Header$1.render, (function (param) {
                                  return React.createElement(Header.make, {});
                                }))
                        };
                }),
              children: React.createElement($$Screen$1.make, {
                    name: "Home",
                    component: HomeScreen.make
                  })
            });
}

var Authed_Navigation = include$1.Navigation;

var Authed_HeaderTitle = include$1.HeaderTitle;

var Authed_stack = include$1.stack;

var Authed_ScreenWithCallback = include$1.ScreenWithCallback;

var Authed_Group = include$1.Group;

var Authed = {
  Navigation: Authed_Navigation,
  HeaderTitle: Authed_HeaderTitle,
  Header: Header$1,
  stack: Authed_stack,
  ScreenWithCallback: Authed_ScreenWithCallback,
  $$Screen: $$Screen$1,
  $$Navigator: $$Navigator$1,
  Group: Authed_Group,
  make: Navigation$Authed
};

var include$2 = NativeStack$ReactNavigation.Make({});

function Navigation$Root(Props) {
  var match = State.useAuthState(undefined);
  var isLoggedIn = Belt_Option.isSome(match[0].user);
  return React.createElement(Native.NavigationContainer, {
              children: isLoggedIn ? React.createElement(Navigation$Authed, {}) : React.createElement(Navigation$NotAuthed, {})
            });
}

var Root_Navigation = include$2.Navigation;

var Root_stack = include$2.stack;

var Root_ScreenWithCallback = include$2.ScreenWithCallback;

var Root_Screen = include$2.$$Screen;

var Root_Navigator = include$2.$$Navigator;

var Root_Group = include$2.Group;

var Root = {
  Navigation: Root_Navigation,
  stack: Root_stack,
  ScreenWithCallback: Root_ScreenWithCallback,
  $$Screen: Root_Screen,
  $$Navigator: Root_Navigator,
  Group: Root_Group,
  make: Navigation$Root
};

var AppHeader;

export {
  AppHeader ,
  NotAuthed ,
  Authed ,
  Root ,
  
}
/* include Not a pure module */
